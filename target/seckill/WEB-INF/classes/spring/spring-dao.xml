<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
        <!--配置整合mybatis过程-->
        <!--1：配置数据库的相关参数-->
        <!--classpath://优先本项目class路径查找，
        没有的话依次
        在其他jar包中class路径查
        找，找到第一个匹配的为止-->
       <!--propertise的属性：${url}-->
    <!-- <context:property-placeholder location="classpath:jdbc.properties"/>
    只能写一条=，= 写多条会报错、
    加一手ignore-unresolvable="true"即可完美解决-->

    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
    <!--2.配置数据库的连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性-->
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <!--配置连接池的私有属性-->
        <property name="maxPoolSize" value="30"></property>
        <property name="minPoolSize" value="10"></property>
        <!--关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false"></property>
        <!--获取连接超时时间-->
        <property name="checkoutTimeout" value="1000"></property>
        <!--当获取失败重试2次数-->
        <property name="acquireRetryAttempts" value="2"></property>
    </bean>
    <!--3:配置sqlSeeionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"></property>
        <!--配置MyBaris全局配置文件：mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--扫描entity包 使用别名-->
        <property name="typeAliasesPackage" value="org.seckill.entity"></property>
        <!--扫描sql配置文件mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>
    <!--4.配置扫描Dao接口包，动态实现Dao接口，并注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--给出扫描dao接口包-->
        <property name="basePackage" value="org.seckill.dao"></property>
    </bean>
    <!--RedisDao-->
    <bean id="redisDao" class="org.seckill.dao.ache.RedisDao">
        <constructor-arg  name="ip" value="${redis.ip}"></constructor-arg>
        <constructor-arg   name="port" value="${redis.port}"></constructor-arg>
    </bean>
</beans>